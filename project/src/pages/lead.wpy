<style lang="less">
.global {
  // display: flex;
  background-size: 100% 100%;
  height: 100%;
  width: 100%;
  background-color: #DEDEDE;
  // position: fixed;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.card {
  width:100%;
  background-color: white;
  margin-bottom: 2%;
}
.contentcolumn {
  display: flex;
  flex-direction: column;
  justify-content: center;
}
.margin {
  margin-top: 2.5%;
  margin-left: 5%;
  margin-right: 5%;
}
.columncenter {
  display: flex;
  flex-direction: column;
  align-items: center;
  
}
.row {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
}

.authorAvator {
  height: 2rem;
  width: 2rem;
  border-radius: 5rem;
  background-color: gray;
  margin-right: 1rem;
}
.imgsize {
  background-color: gray;
  width: 100%;
  height: 8rem;
}
.style {
  height: 1rem;
  width: 2.5rem;
  background-color: black;
  border-radius: 3rem;
}
.flexend {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
}
.bottomfont{
  font-size: 0.8rem;
}
.textcontent {
  display: -webkit-box;
  overflow: hidden;
  // white-space: wrap;
  text-overflow: ellipsis;
  word-break: break-all;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
}
.text {
  // text-overflow: fade(10px);
  line-height: 1.4rem;
  font-size: 0.9rem;
}
.label {
  line-height: 1rem;
  font-size: 0.7rem;
  background-color: sandybrown;
  border-radius: 1rem;
  margin-right: 0.5rem;
  padding: 0.1rem 0.4rem;
}
</style>

<template>
<view class="global">
  <view class="card contentcolumn" style="margin-top: 1px;" wx:for="{{lead}}" wx:key="index" id="{{index}}" data-index="{{index}}">

      <view class="row authorview margin" @tap="author">
        <image class="authorAvator" src="{{item.avatarUrl}}"></image>
        <text style="font-size:15px;">{{item.authorName}}</text>
      </view>

      <view class="columncenter margin" @tap="leadcontent">
        <image class="imgsize" style="border-radius: 0.3rem;" src="{{item.icon}}"></image>
      </view>

      <view class="margin">
        <text class="label" style="color: white;">{{item.label}}</text>
        <text class="text" @tap="leadcontent">{{item.title}}</text>
      </view>

      <text class="margin textcontent" style="font-size: 17px; color: #8a8a8a;" @tap="leadcontent">{{item.text}}</text>

      <view class="row margin" style="justify-content: space-between; margin-bottom: 2.5%;">
        <view class="row" style="color: #bfbfbf;" @tap="leadcontent">
          <view class="bottomfont">{{item.tapnumber}}点击</view>
          <view class="bottomfont">·{{item.relevant}}</view>
        </view>
        <view class="row flexend bottomfont" @tap="like" data-index="{{index}}">
          <view class="bottomfont" style="color:{{color[index]}}">{{item.like}}</view>
          <image style="margin-left: 0.4rem; height: 0.7rem; width: 0.7rem; color:{{color[index]}};" src="{{imglike[index]}}"></image>
        </view>
      </view>

  </view>
</view>
</template>

<script>
import wepy from 'wepy'
import content from '../util/lead'
export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '领读 '
  }
  data = {

    imglike: [],
    lead: content,
    color: []
  }
  methods = {
    like(e) {
      let self = this
      console.log(e)
      console.log(e.currentTarget.dataset.index)
      const item = e.currentTarget.dataset.index
      // self.setData({
      //   color[item]: '#e09664'
      // })
      self.color[item] = '#e09664'
      self.imglike[item] = '../images/afterlike.png'
    },
    leadcontent(e) {
      console.log(e.currentTarget.dataset.index)
      let serial = e.currentTarget.dataset.index
      wepy.navigateTo({
        url: `./leadcontent?index=${serial}`
      })
    }
    // author() {
    //   wepy.navigateTo({
    //     url: './'
    //   })
    // }
  }

  onLoad() {
    let self = this
    console.log(content.length)
    console.log(self.imglike)
    for (var index = 0; index < content.length; index++) {
      self.imglike[index] = '../images/thumbsup.png'
      self.color[index] = '#bfbfbf'
    }
  }
  onPullDownRefresh() {
    setTimeout(function() {
      wepy.stopPullDownRefresh()
    }, 1000)
  }
}
</script>
