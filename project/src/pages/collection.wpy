// 2017-10-13 Stanley Chen

<style lang="less">
.good {
  display: flex;
}

.view {
  display: flex;
  bottom: 0;
  width: 100%;
  position: absolute;
  justify-content: center;
  margin-bottom: 0.5rem;
  font-size: 0.5rem;
  color: gray;
}

.img {
  background-image: url('https://img.25pp.com/uploadfile/bizhi/iphone6p/20151123/1448241981522025_390x690.jpg');
  background-size: 100% 100%;
  position: fixed;
  bottom: 0;
  width: 100%;
  height: 100%;
}

.location {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.size {
  width: 20%;
  height: 20%;
}

.space {
  margin-top: 35%;
}

.dis-six {
  // justify-content: space-between;
  // margin: 5px 60px 10px 60px;
  flex: 1;
  flex-direction: column; // 主轴方向:列
  justify-content: center;
  flex-wrap: wrap;
}

.row {
  display: flex;
  flex-direction: row;
  margin-top: 5%;
}

.box {
  background: rgba(36, 36, 36, 0.6);
  height: 1.5rem;
  width: 1.4rem;
  margin: 0.5rem;
  padding: 0.3rem;
  border-radius: 0.4rem;
}
.boxes {
  background: rgba(36, 36, 36, 0.5);
  height: 6.6rem;
  width: 5rem;
  margin-left: 0.46rem;
  margin-right: 0.46rem;
  border-radius: 0.4rem;
  box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);

}

.height {
  height: 100%;
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-content: center;
  border-radius: 0.4rem;
}
.space {
  margin-top: 2.5%;
  margin-bottom: 2.5%;
  font-size: 16px;
}
.line {
  width: 100%;
  height: 1px;
  // background: rgba(36, 36, 36, 0);
  box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);
  margin-bottom: 4%;
  margin-top: 4%;
}
.inputContent {
  position: fixed;
  top: 0;
  height: 100%;
  width: 100%;
  background-color: rgba(36, 36, 36, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
}
.topright {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  margin-bottom: 5%;
}
.center {
  padding: 1rem;
  background-color: rgba(36, 36, 36, 0.9);
  border-radius: 10px;
}

.border {
  height: 6rem;
  width: 10rem;
  align-items: center;
  background: rgba(36, 36, 36, 0.5);
  border-radius: 5px;
  margin-bottom: 1%;
}
.inputContent {
  position: fixed;
  top: 0;
  height: 100%;
  width: 100%;
  background-color: rgba(36, 36, 36, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
}

.btn-area {
  margin: 0;
}

.inputContent {
  position: fixed;
  top: 0;
  height: 100%;
  width: 100%;
  background-color: rgba(36, 36, 36, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
}

.centerinput {
  padding: 1rem;
  background-color: rgba(36, 36, 36, 0.9);
  border-radius: 10px;
}
</style>

<template>

  <scroll-view scroll-y style="height: {{height}}px; width: {{width}}px;" class="img">
    <view>
      <view class="topright" @tap="tap">
        <image class="box" src="{{c3}}"></image>
      </view>
    </view>

    <view wx:if="{{show}}" class="line"></view>

    <view class="dis-six">
      <view wx:for="{{src}}" wx:key="index">
        <view class="row">
          <view class="boxes">
            <image class="height" src="{{item}}" @tap="onTapImg"></image>
          </view>
          <view class="space">
            <view @tap="showTime">使用时间:{{usetime}}</view>
            <view @tap="showClass">使用课程:{{whichclass}}</view>
            <view  class="row" @tap="showDiscrible">
              <view>简介:</view>
              <view class="border">{{discribe}}</view>
            </view>
            </view>
          </view>
        </view>
        <view class="line"></view>
      </view>
    </view>

    <view wx:if="{{showTime}}" class="inputContent">
      <view class="centerinput">
        <input bindinput="Timeinput"/>
      </view>
      <button class="btn-area" bindtap="comfirmTime">确认</button>
    </view>
    <view wx:if="{{showClass}}" class="inputContent">
      <view class="centerinput">
        <input bindinput="Classinput"/>
      </view>
      <button class="btn-area" bindtap="comfirmClass">确认</button>
    </view>
    <view wx:if="{{showDiscrible}}" class="inputContent">
      <view class="centerinput">
        <input bindinput='Discribleinput' />
      </view>
      <button class="btn-area" bindtap="comfirmDiscrible">确认</button>
    </view>
    <!-- <view wx:if="{{show}}" class="inputContent">
      <view class="center">
        <input />
      </view>
    </view> -->
  </scroll-view>
</template>

<script>
import wepy from 'wepy'
export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '添加你想要交易的书籍'
  }

  data = {
    book: '../images/WechatIMG165.jpeg',
    c3: '../images/加.png',
    src: [],
    usetime: 'unknow',
    whichclass: 'unknow',
    discribe: '添加描述',
    show: false,
    showTime: false,
    showClass: false,
    showDiscrible: false
  }

  methods = {
    tap() {
      let that = this
      wepy.chooseImage({
        count: 10,
        sizeType: ['original', 'compressed'],
        sourceType: ['album', 'camera'],
        success: function(res) {
          let arr = that.src
          arr.push(res.tempFilePaths[0])
          that.src = arr
          that.setData({
            src: arr
          })
        }
      })
    },
    onTapImg(e) {
      // let self = this
      // self.show = true
      wepy.navigateTo({
        url: 'details?target=true'
      })
    },
    showTime() {
      let self = this
      self.showTime = true
    },
    showClass() {
      let self = this
      self.showClass = true
    },
    showDiscrible() {
      let self = this
      self.showDiscrible = true
    },
    comfirmTime() {
      let self = this
      self.showTime = false
    },
    comfirmClass() {
      let self = this
      self.showClass = false
    },
    comfirmDiscrible() {
      let self = this
      self.showDiscrible = false
    },
    Timeinput(e) {
      console.log(e)
      let self = this
      self.usetime = e.detail.value
    },
    Classinput(e) {
      console.log(e)
      let self = this
      self.whichclass = e.detail.value
    },
    Discribleinput(e) {
      console.log(e)
      let self = this
      self.discribe = e.detail.value
    }
  }

  onLoad() {
    let self = this
    wepy.getSystemInfo({
      success(res) {
        self.height = res.windowHeight
        self.width = res.windowWidth
      }
    })
  }
  onPullDownRefresh() {
    setTimeout(function() {
      wepy.stopPullDownRefresh()
    }, 1000)
  }
}
</script>
