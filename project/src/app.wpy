<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/user',
      'pages/second-hand-books',
      'pages/information',
      'pages/collection',
      'pages/required'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: 'Bisque',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    },
    tabBar: {
      color: 'black',
      selectedColor: 'pick',
      borderstyle: 'pick',
      backgroundColor: 'pick',
      list: [{
        pagePath: 'pages/user',
        text: '我的收藏',
        iconPath: './images/home (1).png',
        selectedIconPath: './images/home.png'
      }, {
        pagePath: 'pages/required',
        text: '想要寻找',
        iconPath: './images/require.png',
        selectedIconPath: './images/required.png'
      }, {
        pagePath: 'pages/information',
        text: '我的信息',
        iconPath: './images/star(1).png',
        selectedIconPath: './images/star.png'
      }]
    }
  }

  globalData = {
    userInfo: null
  }

  constructor() {
    super()
    this.use('requestfix')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep(s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync() {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success(res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
